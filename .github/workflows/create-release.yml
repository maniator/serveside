name: Publish module

on:
  workflow_dispatch:
    inputs:
      type:
        required: true
        default: 'create-canary'
        description: |
          Default will publish a canary build
          To publish a real build off main send 'publish-release'
      pr_number:
        required: false
        default: '0'
        description: 'PR to read from for canary build'

env:
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

permissions:
  contents: read # for checkout
  pull-requests: write  # for comments
  packages: write # for publish

jobs:
  start:
    name: Start publishing
    runs-on: ubuntu-latest
    if: |
      startsWith(github.event.inputs.type, 'create-canary') || \
      startsWith(github.event.inputs.type, 'publish-release')
    steps:
      - uses: peter-evans/commit-comment@v1
        with:
          sha: ${{ github.sha }}
          body: |
            ðŸŽ‰ Release build started
        
  npm:
    name: Publish to NPM
    runs-on: ubuntu-latest
    needs: start
    if: |
      startsWith(github.event.inputs.type, 'create-canary') || \
      startsWith(github.event.inputs.type, 'publish-release')
    steps:
      - name: checkout canary
        if: startsWith(github.event.inputs.type, 'create-canary')
        run: |
          gh repo clone ${{ github.repository }} . -- --depth 1
          gh pr checkout ${{github.event.inputs.pr_number}} -R ${{ github.repository }}

      - name: checkout main
        if: startsWith(github.event.inputs.type, 'publish-release')
        uses: actions/checkout@v2

      - name: Read .nvmrc
        run: echo "##[set-output name=NVMRC;]$(cat .nvmrc)"
        id: nvm
      - name: Setup Node ${{ steps.nvm.outputs.NVMRC }}
        uses: actions/setup-node@v2
        with:
          node-version:  ${{ steps.nvm.outputs.NVMRC }}
          registry-url: 'https://npm.pkg.github.com'
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'
      - name: Install
        run: npm ci

      - name: Authenticate with NPM Registry
        run: |
          echo "@serveside:registry=http://registry.npmjs.org/" > .npmrc
          echo "registry=http://registry.npmjs.org/" >> .npmrc
          echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> .npmrc
          npm whoami
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Publish canary to npm
        if: startsWith(github.event.inputs.type, 'create-canary')
        run: npm run release:canary:ci
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Publish to GH
        if: startsWith(github.event.inputs.type, 'publish-release')
        run: npm run release:ci
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

  gh:
    name: GH
    runs-on: ubuntu-latest
    needs: start
    if: |
      startsWith(github.event.inputs.type, 'create-canary') || \
      startsWith(github.event.inputs.type, 'publish-release')
    steps:
      - name: checkout canary
        if: startsWith(github.event.inputs.type, 'create-canary')
        run: |
          gh repo clone ${{ github.repository }} . -- --depth 1
          gh pr checkout ${{github.event.inputs.pr_number}} -R ${{ github.repository }}

      - name: checkout main
        if: startsWith(github.event.inputs.type, 'publish-release')
        uses: actions/checkout@v2
      
      - name: Read .nvmrc
        run: echo "##[set-output name=NVMRC;]$(cat .nvmrc)"
        id: nvm
      - name: Setup Node ${{ steps.nvm.outputs.NVMRC }}
        uses: actions/setup-node@v2
        with:
          node-version:  ${{ steps.nvm.outputs.NVMRC }}
          registry-url: 'https://npm.pkg.github.com'
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'
      - name: Install
        run: npm ci

      - name: Authenticate with GH Registry
        run: |
          echo "@serveside:registry=https://npm.pkg.github.com/" > .npmrc
          echo "registry=https://npm.pkg.github.com/" >> .npmrc
          echo "//npm.pkg.github.com/:_authToken=$NPM_TOKEN" >> .npmrc
          npm whoami
        env:
          NPM_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish canary to GH
        if: startsWith(github.event.inputs.type, 'create-canary')
        run: npm run release:canary:ci
        env:
          NPM_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish to GH
        if: startsWith(github.event.inputs.type, 'publish-release')
        run: npm run release:ci
        env:
          NPM_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  deploy-complete:
    name: Publishing Complete
    needs: 
      - gh
      - npm
    runs-on: ubuntu-latest
    steps:
      - uses: peter-evans/commit-comment@v1
        with:
          sha: ${{ github.sha }}
          body: |
            ðŸŽ‰ Release complete!
