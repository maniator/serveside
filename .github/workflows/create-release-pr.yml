name: Create Release

on:
  workflow_dispatch:
    inputs:
      type:
        required: false
        default: 'create-release'
        description: ''

env:
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

# require public member
# private member is treated as CONTRIBUTOR
permissions:
  contents: write # for checkout and tag
  pull-requests: write  # for comments
  packages: write # for publish

jobs:
  create_release_pr:
    name: Create Release Pull Request and tags
    if: startsWith(github.event.inputs.type, 'create-release')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Read .nvmrc
        run: echo "##[set-output name=NVMRC;]$(cat .nvmrc)"
        id: nvm
      - name: Setup Node ${{ steps.nvm.outputs.NVMRC }}
        uses: actions/setup-node@v2
        with:
          node-version:  ${{ steps.nvm.outputs.NVMRC }}
          registry-url: 'https://npm.pkg.github.com'
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'
          token: ${{ secrets.NPM_TOKEN }}
      - name: Authenticate with Registry
        run: |
          echo "@serveside:registry=http://registry.npmjs.org/" > .npmrc
          echo "registry=http://registry.npmjs.org/" >> .npmrc
          echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> .npmrc
          npm whoami
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Install
        run: npm ci
      - name: Git Identity
        run: |
          git config --global user.name '${{ github.actor }}'
          git config --global user.email '${{ github.actor }}@users.noreply.github.com'
          git checkout -B release/next
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Versionup commit
        run: |
          npm run version:ci
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create Pull Request
        id: cpr
        shell: bash -x {0}
        run: |
          git fetch origin main
          git push -f -u origin release/next

          if !gh pr view;
          then
            gh pr create \
              --label "Type: Release" \
              --base main \
              --draft --fill
          fi
