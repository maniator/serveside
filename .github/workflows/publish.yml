name: publish
on:
  # When Release Pull Request is merged
  pull_request:
    branches:
      - main
    types: [ closed ]
  issue_comment:
    types: [ created ]

permissions:
  contents: write # for checkout and tag
  pull-requests: write  # for comments
  packages: write # for publish

jobs:
  publish:
    name: Publish
    runs-on: ubuntu-latest
    if: |
      (
        github.event_name == 'issue_comment' &&
        (github.event.comment.author_association == 'MEMBER' || 
          github.event.comment.author_association == 'OWNER' || 
          github.event.comment.author_association == 'CONTRIBUTOR') &&
        startsWith(github.event.comment.body, '/publish-release')
      ) || 
      (
        github.event_name == 'pull_request'
      )
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Read .nvmrc
        run: echo "##[set-output name=NVMRC;]$(cat .nvmrc)"
        id: nvm
      - name: Setup Node ${{ steps.nvm.outputs.NVMRC }}
        uses: actions/setup-node@v2
        with:
          node-version:  ${{ steps.nvm.outputs.NVMRC }}
          registry-url: 'https://npm.pkg.github.com'
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'
          token: ${{ secrets.NPM_TOKEN }}

      - name: Git Identity
        run: |
          git config --global user.name '${{ github.actor }}'
          git config --global user.email '${{ github.actor }}@users.noreply.github.com'

      - name: Install
        run: npm ci
      # Define ${CURRENT_VERSION}
      - name: Set Current Version
        run: |
          CURRENT_VERSION=$(node -p 'require("./lerna.json").version')
          echo "CURRENT_VERSION=${CURRENT_VERSION}" >> $GITHUB_ENV

      - name: Authenticate with NPM Registry
        run: |
          echo "@serveside:registry=http://registry.npmjs.org/" > .npmrc
          echo "registry=http://registry.npmjs.org/" >> .npmrc
          echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> .npmrc
          npm whoami
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Publish to npm
        run: npm run release -- --yes
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Authenticate with GH Registry
        run: |
          echo "@maniator:registry=https://npm.pkg.github.com/" > .npmrc
          echo "registry=https://npm.pkg.github.com/" >> .npmrc
          echo "//npm.pkg.github.com/:_authToken=$NPM_TOKEN" >> .npmrc
          npm whoami
        env:
          NPM_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish to GH
        run: npm run release -- --yes
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/github-script@v4
        if: github.event_name == 'pull_request'
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'https://github.com/${{ github.repository }}/releases/tag/v${{ env.CURRENT_VERSION }} is released ðŸŽ‰'
            })
